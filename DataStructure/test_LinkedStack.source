<head language="Chinese">

</head>
<head language="English">

</head>
<assemblyX86 compiler="fasm" Platform="Windows">
format PE console
entry start
include "C:\FASM\INCLUDE\win32a.inc"

section '.code' code readable executable
start:
	
</assemblyX86>
<assemblyX64 compiler="fasm" Platform="Windows">
format PE64 GUI
entry start

section '.text' code readable executable

start:
	sub	rsp,	(4+2)*8
LABEL	.linkedStack	AT	[rsp+4*8]
LABEL	.i1	AT	[rsp+5*8]
	xor	rcx,	rcx
	call	_LinkedStack.isEmpty
	mov	[.i1],	rax
	xor	rcx,	rcx
	call	_LinkedStack.getSize
	mov	rdx,	rax
	
	xor	rcx,	rcx
	call	[ExitProcess]
</assemblyX64>
<cpp>
#include <iostream>
</cpp>
<include>Exception/NullPointerException</include>
<include>_LinkedStack</include>
<cpp>
int main(){
	_LinkedStack<float> *stack = (_LinkedStack<float>*)0;
	try{
		std::cout << stack->isEmpty();
	}catch(NullPointerException npe){
		std::cerr << "NullPointerException caught" << '\n';
	}
	stack = new _LinkedStack<float>();
	std::cout << stack->isEmpty() << ' ' << stack->getSize() << '\n';
	// 1 0
	std::cout << stack->pushElement(2.5f) << ' ';
	std::cout << stack->pushElement(0.5f) << ' ';
	std::cout << stack->pushElement(0.25f) << '\n';
	// 1 1 1
	std::cout << stack->isEmpty() << ' ' << stack->getSize() << '\n';
	// 0 3
	std::cout << stack->hasElement(0.5f) << ' ';
	std::cout << stack->hasElement(1.0f) << '\n' << '\n';
	// 1 0
	delete stack;
	
	stack = new _LinkedStack<float>(1.5f);
	std::cout << stack->isEmpty() << ' ' << stack->getSize() << '\n';
	// 0 1
	std::cout << stack->pushElement(0.5f) << ' ';
	std::cout << stack->pushElement(0.25f) << ' ';
	std::cout << stack->pushElement(2.5f) << '\n';
	// 1 1 1
	std::cout << stack->isEmpty() << ' ' << stack->getSize() << '\n';
	// 0 4
	std::cout << stack->hasElement(0.5f) << ' ';
	std::cout << stack->hasElement(1.0f) << '\n';
	// 1 0
	std::cout << stack->popElement() << '\t';
	std::cout << stack->popElement() << '\n';
	// 2.5	0.25
	std::cout << stack->removeAllElement() << '\n';
	// 1
	std::cout << stack->isEmpty() << ' ' << stack->getSize();
	std::cout << '\n' << '\n';
	// 1 0
	
	return 0;
}
</cpp>
<assemblyX86 compiler="fasm">

</assemblyX86>
<assemblyX64 compiler="fasm">
section '.data' data readable writeable

item	dq 8 dup(0)
buffer	db 32 dup(0)

section '.idata' import data readable writeable

	dd 0,0,0,RVA kernel_name,RVA kernel_table
	dd 0,0,0,RVA user_name,RVA user_table
	dd 0,0,0,0,0

kernel_table:
	ExitProcess dq RVA _ExitProcess
	dq 0
user_table:
	MessageBoxA dq RVA _MessageBoxA
	dq 0

	kernel_name	db 'KERNEL32.DLL',0
	user_name	db 'USER32.DLL',0

_ExitProcess	dw 0
	db 'ExitProcess',0
_MessageBoxA	dw 0
	db 'MessageBoxA',0
</assemblyX64>
